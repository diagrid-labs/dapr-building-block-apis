{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "2 - Failure & Resiliency",
  "steps": [
    {
      "title": "Failure is inevitable",
      "description": "# Failure is inevitable\r\n\r\n## Fallacies of distributed computing\r\n\r\n1. The network is reliable\r\n2. Latency is zero\r\n3. Bandwidth is infinite\r\n4. The network is secure\r\n5. Topology doesn't change\r\n6. There is one administrator\r\n7. Transport cost is zero\r\n8. The network is homogeneous\r\n\r\n- [en.wikipedia.org/wiki/Fallacies_of_distributed_computing](https://en.wikipedia.org/wiki/Fallacies_of_distributed_computing)\r\n- [Fallacies of Distributed Computing \r\nExplained](https://pages.cs.wisc.edu/~zuyu/files/fallacies.pdf) (pdf)"
    },
    {
      "directory": "ResiliencyDemo",
      "description": "# ResiliencyDemo\n\nNavigate to the ResiliencyDemo folder:\n>> cd ResiliencyDemo\n\nList the folder content:\n>> ls\n\nBuild the .NET solution with AppA and AppB:\n>> dotnet build"
    },
    {
      "file": "ResiliencyDemo/AppA/AppA.csproj",
      "description": "## AppA.csproj",
      "line": 1
    },
    {
      "file": "ResiliencyDemo/AppA/Program.cs",
      "description": "# AppA Program.cs",
      "line": 1
    },
    {
      "file": "ResiliencyDemo/AppB/AppB.csproj",
      "description": "## AppB.csproj",
      "line": 1
    },
    {
      "file": "ResiliencyDemo/AppB/Program.cs",
      "description": "## AppB Program.cs",
      "line": 1
    },
    {
      "file": "ResiliencyDemo/Resources/statestore.yaml",
      "description": "## Dapr state store component",
      "line": 1
    },
    {
      "file": "ResiliencyDemo/dapr.yaml",
      "description": "## Dapr multi-app run file\n\nRun AppA and AppB using the Dapr CLI:\n\n>> dapr run -f .",
      "line": 1,
      "selection": {
        "start": {
          "line": 3,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 17
        }
      }
    },
    {
      "file": "ResiliencyDemo/local.http",
      "description": "## Service invocation from AppA to AppB",
      "line": 3
    },
    {
      "title": "Resiliency service-to-service",
      "description": "![Resiliency service to service](./images/resiliency-s2s.PNG)"
    },
    {
      "title": "Simulate issue with AppB",
      "description": "## Simulate issue with AppB (Service invocation)\n\nLet's start AppA, but not AppB. Make a request to AppA, wait a couple of seconds and then start AppB.\n\nNavigate to AppA folder:\n\n>> cd AppA\n\nRun AppA with the Dapr CLI: \n>> dapr run --app-id app-a --app-port 5045 --dapr-http-port 3500 --resources-path \"../Resources\" -- dotnet run\n\nFirst make a request to AppA, then open a new terminal and navigate to AppB:\n\n`cd AppB`\n\nRun AppB with the Dapr CLI: \n\n`dapr run --app-id app-b --app-port 5047 --dapr-http-port 3502 --resources-path \"../Resources\" -- dotnet run`"
    },
    {
      "file": "ResiliencyDemo/local.http",
      "description": "## Service invocation from AppA to AppB",
      "line": 3
    },
    {
      "title": "Resiliency outbound",
      "description": "![outbound resiliency](./images/resiliency-outbound.PNG)"
    },
    {
      "title": "Simulate an issue with the state store",
      "description": "## Simulate an issue with the state store\n\nNavigate to the ResiliencyDemo folder and run AppA and AppB with multi-app run:\n\n>> dapr run -f .\n\nOpen a new terminal and stop the `dapr_redis` container:\n\n`docker stop dapr_redis`\n\nWait a few seconds and start the `dapr_redis` container:\n\n`docker start dapr_redis`"
    },
    {
      "title": "Resiliency pubsub",
      "description": "![Inbound and outbound resiliency](./images/resiliency-pubsub.PNG)"
    },
    {
      "file": "ResiliencyDemo/AppA/Program.cs",
      "description": "## AppA Program.cs /pubsub",
      "line": 16
    },
    {
      "directory": "ResiliencyDemo/Resources",
      "description": "## Rename pubsub and subscription YAML files\n\n1. Navigate to the Resources folder.\n2. Rename `pubsub.yaml.temp` to `pubsub.yaml`.\n3. Rename `subscription.yamp.temp` to `subscription.yaml`."
    },
    {
      "file": "ResiliencyDemo/Resources/pubsub.yaml",
      "description": "## Pubsub component",
      "line": 1
    },
    {
      "file": "ResiliencyDemo/Resources/subscription.yaml",
      "description": "## Subscription file\n\nThis is a declarative subscription to a topic. You can also use a programmatic way in code.",
      "line": 1
    },
    {
      "title": "Run AppA and AppB",
      "description": "## Simulate an issue with the message broker\n\nEnsure you're in the ResilienceDemo folder and the dapr_redis container is running.\n\nRun AppA and AppB using the Dapr CLI with multi-app run:\n\n>> dapr run -f .\n\n\nOpen a new terminal and stop the `dapr_redis` container:\n\n`docker stop dapr_redis`\n\nAfter a few seconds start the `dapr_redis` container again:\n\n`docker start dapr_redis`\n"
    },
    {
      "file": "ResiliencyDemo/local.http",
      "description": "## Pubsub from AppA to AppB",
      "line": 21
    }
  ]
}