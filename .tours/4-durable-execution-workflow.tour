{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "4 - Durable Execution & Dapr Workflow",
  "nextTour": "5 - Session close",
  "steps": [
    {
      "title": "What problem are we solving?",
      "description": "## What problem are we solving?\n\nMany organizations lose money when their IT systems fail. Organizations want their systems to always work, 100% of the time. (= unrealistic!)\n\nWe know that systems fail, so we need to recover from failure (ideally automatically)."
    },
    {
      "title": "Durable Execution",
      "description": "## Durable execution \n\nDurable execution is running code in a stateful way. In case the process, that runs the code, stops, a new process is started, and continues to run the code to completion.",
      "selection": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 81
        }
      }
    },
    {
      "title": "Workflows",
      "description": "## Workflow Engines\n\n### Durable execution == Workflow engine\n\nA workflow engine executes a set of tasks (activities) in a specific sequence.\n\nSomeone is responsible for creating a workflow that defines the sequence of steps (*orchestration*)."
    },
    {
      "title": "Workflow as code",
      "description": "## Workflow as Code\n\nA workflow system where the sequence of tasks (activities) is written in code by developers.\n\n**Workflow as Code tools:**\n\n- [Temporal](https://temporal.io/)\n- [Restate](https://restate.dev/)\n- [Azure Durable Functions](https://learn.microsoft.com/azure/azure-functions/durable/durable-functions-overview)\n- [Dapr Workflow](https://docs.dapr.io/developing-applications/building-blocks/workflow/workflow-overview/)",
      "selection": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 28
        }
      }
    },
    {
      "title": "Dapr workflow",
      "description": "![Dapr Workflow](./images/workflow.PNG)"
    },
    {
      "title": "Task chaining",
      "description": "![Task chaining](./images/workflow-task-chaining.PNG)",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 54
        }
      }
    },
    {
      "title": "Fan-out/fan-in",
      "description": "![Fan-out/fan-in](./images/workflow-fanoutin.PNG)"
    },
    {
      "title": "Monitor",
      "description": "![Monitor](./images/workflow-monitor.PNG)"
    },
    {
      "title": "External system",
      "description": "![External System Interaction](./images/workflow-externalsystem.PNG)"
    },
    {
      "title": "Workflow example",
      "description": "![Workflow example](./images/workflow-example.PNG)"
    },
    {
      "title": "Dapr workflow engine",
      "description": "![Dapr workflow engine](./images/workflow-engine.PNG)"
    },
    {
      "title": "Challenges",
      "description": "## Workflow as Code challenges\n\n- Deterministic code\n- Idempotency\n- Versioning\n- Payloads\n\n[Source](https://medium.com/@cgillum/common-pitfalls-with-durable-execution-frameworks-like-durable-functions-or-temporal-eaf635d4a8bb)"
    },
    {
      "directory": "WorkflowDemo",
      "description": "## Workflow Demo\r\n\r\n[Workflow Diagriam](./README.md)"
    },
    {
      "file": "WorkflowDemo/WorkflowApp/WorkflowApp.csproj",
      "description": "## WorkflowApp.csproj",
      "line": 1
    },
    {
      "file": "WorkflowDemo/WorkflowApp/Program.cs",
      "description": "## WorkflowApp Program.cs",
      "line": 1
    },
    {
      "file": "WorkflowDemo/WorkflowApp/ValidateOrderWorkflow.cs",
      "description": "## ValidateOrderWorkflow",
      "line": 6
    },
    {
      "file": "WorkflowDemo/WorkflowApp/UpdateInventory.cs",
      "description": "## UpdateInventory Activity",
      "line": 6
    },
    {
      "file": "WorkflowDemo/WorkflowApp/ShippingCalculator.cs",
      "description": "## ShippingCalculator Activity",
      "line": 6
    },
    {
      "file": "WorkflowDemo/ShippingApp/Program.cs",
      "description": "## ShippingApp calculateCost endpoint",
      "line": 5
    },
    {
      "title": "Simulate an issue with the workflow process",
      "description": "## Simulate an issue with the workflow process\r\n\r\n1. Ensure you're in the WorkflowDemo folder.\r\n\r\n2. Run the demo with Dapr multi-app run:\r\n\r\n>> dapr run -f .\r\n\r\n3. Use the [local.http](./WorkflowDemo/local.http) file to restock the in-memory inventory.\r\n4. Start an instance of the workflow. Once started, quickly stop the Dapr run process (CTRL+C in the terminal) which stops the Workflow and Shipping apps.\r\n5. Restar the Workflow and Shipping apps with the Dapr CLI:\r\n\r\n>> dapr run -f .\r\n\r\nThe workflow should complete now."
    },
    {
      "file": "WorkflowDemo/local.http",
      "description": "## Local.http\r\n\r\nThis file is used with the [VSCode REST extension](https://marketplace.visualstudio.com/items?itemName=humao.rest-client) to make HTTP requests to the applications and the Dapr sidecar.",
      "line": 1
    }
  ]
}